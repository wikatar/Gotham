// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Mission {
  id          String   @id @default(cuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime?
  status      String   // active, completed, cancelled
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  incidentReports IncidentReport[]

  @@map("missions")
}

model Anomaly {
  id           String   @id @default(cuid())
  title        String
  description  String?
  severity     String   // low, medium, high, critical
  resourceId   String?
  resourceType String?
  metadata     String?  // JSON as string for SQLite
  resolved     Boolean  @default(false)
  resolvedAt   DateTime?
  detectedAt   DateTime @default(now())

  // Relations
  incidentReports IncidentReport[]

  @@map("anomalies")
}

// Incident Report Model
model IncidentReport {
  id             String   @id @default(cuid())
  title          String
  description    String
  sourceType     String   // agent | anomaly | manual
  sourceId       String?  // referens till agent eller anomaly
  missionId      String?  // koppla till uppdrag
  status         String   // open | investigating | resolved
  severity       String   // low | medium | high | critical
  tags           String   // Comma-separated tags for SQLite compatibility
  createdBy      String?  // userId eller email (kan byggas ut senare)
  readToken      String   @unique // för säker delning
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  mission Mission? @relation(fields: [missionId], references: [id])
  anomaly Anomaly? @relation(fields: [sourceId], references: [id])

  @@map("incident_reports")
} 